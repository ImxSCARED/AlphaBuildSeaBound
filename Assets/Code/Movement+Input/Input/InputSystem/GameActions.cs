//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Code/Movement+Input/Input/InputSystem/GameActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameActions"",
    ""maps"": [
        {
            ""name"": ""Sailing"",
            ""id"": ""6a2b60fa-e516-408d-a67a-5bf3c7dfde75"",
            ""actions"": [
                {
                    ""name"": ""Forward"",
                    ""type"": ""Value"",
                    ""id"": ""ac4d348b-03f8-447f-abb9-b23641e3ba96"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""3cc2585c-00e9-495a-915e-d1b3b15e44bb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""bd40c9a6-376e-4962-81df-15aaeb4687dc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Accelerate"",
                    ""type"": ""Button"",
                    ""id"": ""0e8abc8d-b948-40ac-a8f8-9da9ae5f34e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""9a7bf9c4-b82e-452a-aaa7-fcb4fa37460d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fish"",
                    ""type"": ""Button"",
                    ""id"": ""1c4ec941-3ba6-4a2e-87e2-3d024b073198"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""c9ced0e5-40b5-4dda-9d52-f5515902bfce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JournalToggle"",
                    ""type"": ""Button"",
                    ""id"": ""a686bb80-b179-4967-8685-14b6dcfe65bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuRight"",
                    ""type"": ""Button"",
                    ""id"": ""4133bd2c-c7d3-4ecf-8251-41ee40d61266"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuLeft"",
                    ""type"": ""Button"",
                    ""id"": ""b87aafc8-ea7c-4578-aa6e-119a630992e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuDown"",
                    ""type"": ""Button"",
                    ""id"": ""f14a1e5a-a48b-4469-ba54-4364a8db18ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuUp"",
                    ""type"": ""Button"",
                    ""id"": ""f0b5e81c-d626-45dd-97d8-3d0f011f1dd6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseToggle"",
                    ""type"": ""Button"",
                    ""id"": ""da666474-b748-4ca2-9e9c-5c3e8003570a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2064f02b-e8d5-4f97-8b2a-3534b984dc33"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Playstation DualShock controller;Xbox controller;Nintendo Pro controller"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""592512ae-f1f1-4451-afa7-77d083496edb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard (Testing)"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9536634c-222a-4d17-bc31-8985e7240d8b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": ""Keyboard (Testing)"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a67d66ec-aa99-4d70-b871-c3b076c20d2f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox controller;Nintendo Pro controller;Playstation DualShock controller"",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""126372d9-0657-433e-ba53-ce804b814302"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": ""Playstation DualShock controller;Xbox controller;Nintendo Pro controller"",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36a73862-2df7-4acb-98a7-7dbc4e70728d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard (Testing)"",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""935370e3-3055-4ad6-9451-cec9a08da94f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": ""Keyboard (Testing)"",
                    ""action"": ""Forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""398b9639-8473-4f0b-874f-7abfc72835bf"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""422b89db-652d-4470-bc5d-35a5654df08f"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6075119e-7f64-420d-876a-827bdb80abce"",
                    ""path"": ""<Joystick>/{Hatswitch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aee43343-f02f-4b89-84d5-ca15b1b08fa0"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard (Testing)"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e515796-d42e-4042-bcdc-afd67e2dd35f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c36ffaa7-2cec-445f-beab-6c90452284ff"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dac4789d-1e68-4a0f-ba25-f243361e0b5a"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ed18634-4ce7-483e-bb5a-ecd1d16574c8"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""055852bc-b1b3-44c6-a75f-b01b1df90c1f"",
                    ""path"": ""<XRController>/{PrimaryAction}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80b6bacf-cd19-495d-b37b-5d726be7cb48"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db88756f-16db-407f-a8bd-9d2189079f15"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""990820d7-373b-494e-95e1-8fb3b07a5179"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3002aa17-2ace-4146-b858-34a6193c4f62"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fish"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed89d896-67f2-4a47-b747-7dd791d9090c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22a0f812-1f91-4c7d-9570-6180da272bb1"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Playstation DualShock controller;Xbox controller;Nintendo Pro controller"",
                    ""action"": ""JournalToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1271be49-ec62-491b-a5e4-b78b16f420ec"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Nintendo Pro controller;Playstation DualShock controller;Xbox controller"",
                    ""action"": ""MenuUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63a86f55-9dbd-4a9c-9c5b-df95d31972c8"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Nintendo Pro controller;Xbox controller;Playstation DualShock controller"",
                    ""action"": ""MenuDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f554429-325a-43c1-bc16-35eb94405ba8"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Nintendo Pro controller;Xbox controller;Playstation DualShock controller"",
                    ""action"": ""MenuLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfa67346-876f-4405-a951-3681f34c6137"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Nintendo Pro controller;Xbox controller;Playstation DualShock controller"",
                    ""action"": ""MenuRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""611fe953-9f34-47e5-a5e9-5601ccd2acd7"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Playstation DualShock controller;Xbox controller;Nintendo Pro controller"",
                    ""action"": ""PauseToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77fa769c-fe75-4e4d-8dad-2299d8b16c7e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard (Testing)"",
                    ""action"": ""PauseToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""21f7c593-98de-47c6-a3d8-a991efb5b0d9"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2ee73645-a026-45c4-b2b4-3d2d8c49a15b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""50982222-ab0f-4b74-893c-94ffb3db30af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""13e6edc5-f9a7-4084-b736-5e3345fe2618"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b9099c24-176b-4004-b4df-89029d1ebeb5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2e3db11e-b8ca-426b-a8d1-e71b707da7fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e833f2e1-c5f5-4a57-b5e5-00a72e556819"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0aa6d444-1dba-4163-b382-fe3c5241e2e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a575a3cd-48d7-477b-b564-db993a18f9a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1bc75f71-6ed9-4837-b8af-2706e26d4dea"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""36a24c9e-eeb4-48fd-906e-a7784e3d4774"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SellFish"",
                    ""type"": ""Button"",
                    ""id"": ""b70e87fe-5da9-44c5-9fde-b704c6c7bced"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExitDock"",
                    ""type"": ""Button"",
                    ""id"": ""644e8505-e992-4af4-9e9e-9547245fa453"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""060c5f2d-a642-4b87-9b01-112b00f65db4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e005b6bf-e8fe-4c91-9e76-ddd9b4be357e"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bfa0ce6b-7cf9-4e91-99b9-72b12edba698"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dd3c9483-0c1b-43f6-80ae-fcd7e15fbd7d"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8b7169b7-f0f4-4705-a8c8-75b2a6d4b270"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7a4583ae-4e91-4b03-a931-b0917bc18dad"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0b4fd311-a201-426b-8c5e-82165da6b4eb"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e92f8770-a841-4c94-9e3a-ef4945998ad1"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e56051bd-9b7c-40a6-96d3-66ba3c327ef9"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0b4cc571-b0e4-45ba-840c-ee7f21f916f5"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Playstation DualShock controller;Xbox controller;Nintendo Pro controller"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""31bca683-5a99-43b3-8c39-8a67c960f360"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9a5455fe-4989-4f01-9a18-388c24346194"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f3ea3af0-d14f-4b1b-8283-9429c1e1f510"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7e901f11-94ef-4eb6-9a5d-1560a6851650"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e87e5988-0e13-49b3-8e48-d5b1f9a2a1a9"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""8dcfa9e9-cbf2-4ef2-a9f6-5e32434add61"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""86561ac8-d690-4a71-ae60-18a53d221bcd"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9e8d3dd8-164c-4934-a4b4-b82466eba869"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3f24b925-262a-4d9e-bc0e-772be2965840"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a6d153a6-5e89-4e53-bdc6-0e1538f30a92"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""16a53bc3-30b2-46a8-999b-e0f8ffe1b233"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""50a11e6d-e607-4c26-b7d3-ea1667a796a9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e2f7c028-effa-47c4-817c-67296e46379e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8d062f20-1e8a-46bb-90ba-f315c660f0ad"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""012d852d-388a-4b30-b5f3-b835e2c774fb"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR;Playstation DualShock controller;Xbox controller;Nintendo Pro controller;Keyboard (Testing)"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5683a4ea-c01a-48b7-84e8-11413f952049"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR;Playstation DualShock controller;Xbox controller;Nintendo Pro controller;Keyboard (Testing)"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0b65e47-deda-44e7-a763-3e83c70e7a6d"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65c66104-6d04-47d0-b700-97a31030da4e"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67680e02-07c3-4602-8a24-7166e41e96e1"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10353f92-1c97-411b-99db-9be828ca6928"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard (Testing)"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56259b1e-fe2b-44d1-80bb-393a09dbf94a"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea6070eb-68c4-4f17-b5c9-edbdf8e8f4d7"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61158ed7-a354-44c3-959a-822a6faf9611"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e299ed9-59f3-4b69-a323-d566af1c1d02"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e29e6beb-6d3f-42cf-95f4-cc712d34daae"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""471900cd-588d-40c8-9d00-f97276d939b1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81ddef41-650a-4b5d-a93c-cbc6efd5c8c2"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9974205-bcf5-4a06-94a3-3f522c0135bb"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a28466e1-83e5-4b52-8bb5-5b3e2b3b9ebd"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SellFish"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8625b82-9212-48b2-b216-4aa979a14ebf"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitDock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Fishing"",
            ""id"": ""7617257e-f2ef-4054-8c13-afcd6e16f48e"",
            ""actions"": [
                {
                    ""name"": ""MinigameMover"",
                    ""type"": ""Value"",
                    ""id"": ""371f0054-aa4e-4a1d-b8e6-d8dce02d8702"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""49038bd5-53e9-493f-93cf-6f228303e69d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8382bd34-8871-498c-a574-26be747d6fd2"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MinigameMover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6c3a089-9a1d-42ab-bd10-0bab1ac0339e"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MinigameMover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""180ab7da-dc63-4f5c-9252-47799fe60c97"",
                    ""path"": ""<Joystick>/{Hatswitch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MinigameMover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea7a4145-c5dd-44d1-b463-38935a4622cb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard (Testing)"",
                    ""action"": ""MinigameMover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17c82f0e-5f62-4999-8f94-c0d5a6b0b0c4"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Playstation DualShock controller"",
            ""bindingGroup"": ""Playstation DualShock controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<DualShockGamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Xbox controller"",
            ""bindingGroup"": ""Xbox controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Nintendo Pro controller"",
            ""bindingGroup"": ""Nintendo Pro controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<SwitchProControllerHID>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard (Testing)"",
            ""bindingGroup"": ""Keyboard (Testing)"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Sailing
        m_Sailing = asset.FindActionMap("Sailing", throwIfNotFound: true);
        m_Sailing_Forward = m_Sailing.FindAction("Forward", throwIfNotFound: true);
        m_Sailing_Yaw = m_Sailing.FindAction("Yaw", throwIfNotFound: true);
        m_Sailing_Look = m_Sailing.FindAction("Look", throwIfNotFound: true);
        m_Sailing_Accelerate = m_Sailing.FindAction("Accelerate", throwIfNotFound: true);
        m_Sailing_Zoom = m_Sailing.FindAction("Zoom", throwIfNotFound: true);
        m_Sailing_Fish = m_Sailing.FindAction("Fish", throwIfNotFound: true);
        m_Sailing_Select = m_Sailing.FindAction("Select", throwIfNotFound: true);
        m_Sailing_JournalToggle = m_Sailing.FindAction("JournalToggle", throwIfNotFound: true);
        m_Sailing_MenuRight = m_Sailing.FindAction("MenuRight", throwIfNotFound: true);
        m_Sailing_MenuLeft = m_Sailing.FindAction("MenuLeft", throwIfNotFound: true);
        m_Sailing_MenuDown = m_Sailing.FindAction("MenuDown", throwIfNotFound: true);
        m_Sailing_MenuUp = m_Sailing.FindAction("MenuUp", throwIfNotFound: true);
        m_Sailing_PauseToggle = m_Sailing.FindAction("PauseToggle", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        m_UI_SellFish = m_UI.FindAction("SellFish", throwIfNotFound: true);
        m_UI_ExitDock = m_UI.FindAction("ExitDock", throwIfNotFound: true);
        // Fishing
        m_Fishing = asset.FindActionMap("Fishing", throwIfNotFound: true);
        m_Fishing_MinigameMover = m_Fishing.FindAction("MinigameMover", throwIfNotFound: true);
        m_Fishing_Exit = m_Fishing.FindAction("Exit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Sailing
    private readonly InputActionMap m_Sailing;
    private ISailingActions m_SailingActionsCallbackInterface;
    private readonly InputAction m_Sailing_Forward;
    private readonly InputAction m_Sailing_Yaw;
    private readonly InputAction m_Sailing_Look;
    private readonly InputAction m_Sailing_Accelerate;
    private readonly InputAction m_Sailing_Zoom;
    private readonly InputAction m_Sailing_Fish;
    private readonly InputAction m_Sailing_Select;
    private readonly InputAction m_Sailing_JournalToggle;
    private readonly InputAction m_Sailing_MenuRight;
    private readonly InputAction m_Sailing_MenuLeft;
    private readonly InputAction m_Sailing_MenuDown;
    private readonly InputAction m_Sailing_MenuUp;
    private readonly InputAction m_Sailing_PauseToggle;
    public struct SailingActions
    {
        private @GameActions m_Wrapper;
        public SailingActions(@GameActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Forward => m_Wrapper.m_Sailing_Forward;
        public InputAction @Yaw => m_Wrapper.m_Sailing_Yaw;
        public InputAction @Look => m_Wrapper.m_Sailing_Look;
        public InputAction @Accelerate => m_Wrapper.m_Sailing_Accelerate;
        public InputAction @Zoom => m_Wrapper.m_Sailing_Zoom;
        public InputAction @Fish => m_Wrapper.m_Sailing_Fish;
        public InputAction @Select => m_Wrapper.m_Sailing_Select;
        public InputAction @JournalToggle => m_Wrapper.m_Sailing_JournalToggle;
        public InputAction @MenuRight => m_Wrapper.m_Sailing_MenuRight;
        public InputAction @MenuLeft => m_Wrapper.m_Sailing_MenuLeft;
        public InputAction @MenuDown => m_Wrapper.m_Sailing_MenuDown;
        public InputAction @MenuUp => m_Wrapper.m_Sailing_MenuUp;
        public InputAction @PauseToggle => m_Wrapper.m_Sailing_PauseToggle;
        public InputActionMap Get() { return m_Wrapper.m_Sailing; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SailingActions set) { return set.Get(); }
        public void SetCallbacks(ISailingActions instance)
        {
            if (m_Wrapper.m_SailingActionsCallbackInterface != null)
            {
                @Forward.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnForward;
                @Forward.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnForward;
                @Forward.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnForward;
                @Yaw.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnYaw;
                @Yaw.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnYaw;
                @Yaw.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnYaw;
                @Look.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnLook;
                @Accelerate.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnAccelerate;
                @Accelerate.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnAccelerate;
                @Accelerate.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnAccelerate;
                @Zoom.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnZoom;
                @Fish.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnFish;
                @Fish.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnFish;
                @Fish.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnFish;
                @Select.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnSelect;
                @JournalToggle.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnJournalToggle;
                @JournalToggle.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnJournalToggle;
                @JournalToggle.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnJournalToggle;
                @MenuRight.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuRight;
                @MenuRight.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuRight;
                @MenuRight.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuRight;
                @MenuLeft.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuLeft;
                @MenuLeft.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuLeft;
                @MenuLeft.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuLeft;
                @MenuDown.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuDown;
                @MenuDown.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuDown;
                @MenuDown.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuDown;
                @MenuUp.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuUp;
                @MenuUp.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuUp;
                @MenuUp.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnMenuUp;
                @PauseToggle.started -= m_Wrapper.m_SailingActionsCallbackInterface.OnPauseToggle;
                @PauseToggle.performed -= m_Wrapper.m_SailingActionsCallbackInterface.OnPauseToggle;
                @PauseToggle.canceled -= m_Wrapper.m_SailingActionsCallbackInterface.OnPauseToggle;
            }
            m_Wrapper.m_SailingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Forward.started += instance.OnForward;
                @Forward.performed += instance.OnForward;
                @Forward.canceled += instance.OnForward;
                @Yaw.started += instance.OnYaw;
                @Yaw.performed += instance.OnYaw;
                @Yaw.canceled += instance.OnYaw;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Accelerate.started += instance.OnAccelerate;
                @Accelerate.performed += instance.OnAccelerate;
                @Accelerate.canceled += instance.OnAccelerate;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @Fish.started += instance.OnFish;
                @Fish.performed += instance.OnFish;
                @Fish.canceled += instance.OnFish;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @JournalToggle.started += instance.OnJournalToggle;
                @JournalToggle.performed += instance.OnJournalToggle;
                @JournalToggle.canceled += instance.OnJournalToggle;
                @MenuRight.started += instance.OnMenuRight;
                @MenuRight.performed += instance.OnMenuRight;
                @MenuRight.canceled += instance.OnMenuRight;
                @MenuLeft.started += instance.OnMenuLeft;
                @MenuLeft.performed += instance.OnMenuLeft;
                @MenuLeft.canceled += instance.OnMenuLeft;
                @MenuDown.started += instance.OnMenuDown;
                @MenuDown.performed += instance.OnMenuDown;
                @MenuDown.canceled += instance.OnMenuDown;
                @MenuUp.started += instance.OnMenuUp;
                @MenuUp.performed += instance.OnMenuUp;
                @MenuUp.canceled += instance.OnMenuUp;
                @PauseToggle.started += instance.OnPauseToggle;
                @PauseToggle.performed += instance.OnPauseToggle;
                @PauseToggle.canceled += instance.OnPauseToggle;
            }
        }
    }
    public SailingActions @Sailing => new SailingActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_MiddleClick;
    private readonly InputAction m_UI_RightClick;
    private readonly InputAction m_UI_TrackedDevicePosition;
    private readonly InputAction m_UI_TrackedDeviceOrientation;
    private readonly InputAction m_UI_SellFish;
    private readonly InputAction m_UI_ExitDock;
    public struct UIActions
    {
        private @GameActions m_Wrapper;
        public UIActions(@GameActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
        public InputAction @SellFish => m_Wrapper.m_UI_SellFish;
        public InputAction @ExitDock => m_Wrapper.m_UI_ExitDock;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @SellFish.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSellFish;
                @SellFish.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSellFish;
                @SellFish.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSellFish;
                @ExitDock.started -= m_Wrapper.m_UIActionsCallbackInterface.OnExitDock;
                @ExitDock.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnExitDock;
                @ExitDock.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnExitDock;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
                @SellFish.started += instance.OnSellFish;
                @SellFish.performed += instance.OnSellFish;
                @SellFish.canceled += instance.OnSellFish;
                @ExitDock.started += instance.OnExitDock;
                @ExitDock.performed += instance.OnExitDock;
                @ExitDock.canceled += instance.OnExitDock;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // Fishing
    private readonly InputActionMap m_Fishing;
    private IFishingActions m_FishingActionsCallbackInterface;
    private readonly InputAction m_Fishing_MinigameMover;
    private readonly InputAction m_Fishing_Exit;
    public struct FishingActions
    {
        private @GameActions m_Wrapper;
        public FishingActions(@GameActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MinigameMover => m_Wrapper.m_Fishing_MinigameMover;
        public InputAction @Exit => m_Wrapper.m_Fishing_Exit;
        public InputActionMap Get() { return m_Wrapper.m_Fishing; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FishingActions set) { return set.Get(); }
        public void SetCallbacks(IFishingActions instance)
        {
            if (m_Wrapper.m_FishingActionsCallbackInterface != null)
            {
                @MinigameMover.started -= m_Wrapper.m_FishingActionsCallbackInterface.OnMinigameMover;
                @MinigameMover.performed -= m_Wrapper.m_FishingActionsCallbackInterface.OnMinigameMover;
                @MinigameMover.canceled -= m_Wrapper.m_FishingActionsCallbackInterface.OnMinigameMover;
                @Exit.started -= m_Wrapper.m_FishingActionsCallbackInterface.OnExit;
                @Exit.performed -= m_Wrapper.m_FishingActionsCallbackInterface.OnExit;
                @Exit.canceled -= m_Wrapper.m_FishingActionsCallbackInterface.OnExit;
            }
            m_Wrapper.m_FishingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MinigameMover.started += instance.OnMinigameMover;
                @MinigameMover.performed += instance.OnMinigameMover;
                @MinigameMover.canceled += instance.OnMinigameMover;
                @Exit.started += instance.OnExit;
                @Exit.performed += instance.OnExit;
                @Exit.canceled += instance.OnExit;
            }
        }
    }
    public FishingActions @Fishing => new FishingActions(this);
    private int m_PlaystationDualShockcontrollerSchemeIndex = -1;
    public InputControlScheme PlaystationDualShockcontrollerScheme
    {
        get
        {
            if (m_PlaystationDualShockcontrollerSchemeIndex == -1) m_PlaystationDualShockcontrollerSchemeIndex = asset.FindControlSchemeIndex("Playstation DualShock controller");
            return asset.controlSchemes[m_PlaystationDualShockcontrollerSchemeIndex];
        }
    }
    private int m_XboxcontrollerSchemeIndex = -1;
    public InputControlScheme XboxcontrollerScheme
    {
        get
        {
            if (m_XboxcontrollerSchemeIndex == -1) m_XboxcontrollerSchemeIndex = asset.FindControlSchemeIndex("Xbox controller");
            return asset.controlSchemes[m_XboxcontrollerSchemeIndex];
        }
    }
    private int m_NintendoProcontrollerSchemeIndex = -1;
    public InputControlScheme NintendoProcontrollerScheme
    {
        get
        {
            if (m_NintendoProcontrollerSchemeIndex == -1) m_NintendoProcontrollerSchemeIndex = asset.FindControlSchemeIndex("Nintendo Pro controller");
            return asset.controlSchemes[m_NintendoProcontrollerSchemeIndex];
        }
    }
    private int m_KeyboardTestingSchemeIndex = -1;
    public InputControlScheme KeyboardTestingScheme
    {
        get
        {
            if (m_KeyboardTestingSchemeIndex == -1) m_KeyboardTestingSchemeIndex = asset.FindControlSchemeIndex("Keyboard (Testing)");
            return asset.controlSchemes[m_KeyboardTestingSchemeIndex];
        }
    }
    public interface ISailingActions
    {
        void OnForward(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnAccelerate(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnFish(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnJournalToggle(InputAction.CallbackContext context);
        void OnMenuRight(InputAction.CallbackContext context);
        void OnMenuLeft(InputAction.CallbackContext context);
        void OnMenuDown(InputAction.CallbackContext context);
        void OnMenuUp(InputAction.CallbackContext context);
        void OnPauseToggle(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
        void OnSellFish(InputAction.CallbackContext context);
        void OnExitDock(InputAction.CallbackContext context);
    }
    public interface IFishingActions
    {
        void OnMinigameMover(InputAction.CallbackContext context);
        void OnExit(InputAction.CallbackContext context);
    }
}
